/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Agency;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.CustomerDirectory;
import Business.Flight;
import Business.FlightDirectory;

import Interface.Customer.SeatPanel;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author manalisharma
 */
public class MasterSchedule extends javax.swing.JPanel {

    /**
     * Creates new form MasterSchedule
     */
   
    private JPanel MasterSchedulePanel;
    private Airliner airliner;
    private FlightDirectory flightDir;
    private AirlinerDirectory airDir;
    private CustomerDirectory cusDir;
   

    public MasterSchedule(JPanel managefPanel, AirlinerDirectory airDir) {
        initComponents();
        this.cusDir=new CustomerDirectory();
        this.MasterSchedulePanel=managefPanel;
        this.airDir=airDir;
        this.flightDir=new FlightDirectory();
        this.airliner=new Airliner();
        populate();
    
    
    }

    public void populate(){
        
        
        
       
       DefaultTableModel model = (DefaultTableModel)schedule.getModel();
       int rowCount = schedule.getRowCount();
        
        for(int i = rowCount - 1; i >=0; i--) {
            model.removeRow(i);
        }
       
        for(Airliner a : airDir.getAirlinerDirectory()) {
           
            
        
            for(Flight b : a.getFlightDirectory().getFlight_Directory()) {
                 Object row[] = new Object[8];
                 row[0]=a;
                 row[1]=b;
                 row[2]=b.getPrice();
                
            row[3] = b.getFromDestination();
            row[4]=b.getToDestination();
            row[5]=b.getSchedule();
             
           
             row[6]=b.getStartDate();
             row[7]=b.getEndDate();
             
    
            model.addRow(row);
            
            }

                     
      
       }
    
    
    
    
       
        
        
        
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        schedule = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchfliTextfield = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        schedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner Name ", "Flight Name", "Price", "From Destination", "To Destination", "Time", "Start Date", "End Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        schedule.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(schedule);

        jLabel1.setText("Master Schedule");

        jLabel2.setText("Search by Flight Name:-");

        searchfliTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchfliTextfieldActionPerformed(evt);
            }
        });
        searchfliTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchfliTextfieldKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchfliTextfieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfliTextfieldKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchfliTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(311, 311, 311))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(searchfliTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addComponent(jButton1)
                .addContainerGap(159, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchfliTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchfliTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchfliTextfieldActionPerformed

    private void searchfliTextfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfliTextfieldKeyPressed
        // TODO add your handling code here:
        /*DefaultTableModel dtm = (DefaultTableModel)schedule.getModel();
        dtm.setRowCount(0);
       for(Airliner a : airDir.getAirlinerDirectory()) {
           
            
        
            for(Flight b : a.getFlightDirectory().getFlight_Directory()) {
                
            if(b.getName().contains(searchfliTextfield.getText())){
                 Object row[] = new Object[9];
                 row[0]=a;
                 row[1]=b;
                 row[2]=b.getPrice();
                
            row[3] = b;
            row[4]=b.getFromDestination();
            row[5]=b.getToDestination();
             row[6]=b.getSchedule();
           
             row[7]=b.getStartDate();
             row[8]=b.getEndDate();
             
    
            dtm.addRow(row);
            
            }

            }
        
       }
        
        
        */
        
        
        
        

    }//GEN-LAST:event_searchfliTextfieldKeyPressed

    private void searchfliTextfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfliTextfieldKeyTyped
        // TODO add your handling code here:
       /* DefaultTableModel dtm = (DefaultTableModel)schedule.getModel();
        dtm.setRowCount(0);
       for(Airliner a : airDir.getAirlinerDirectory()) {
           
            
        
            for(Flight b : a.getFlightDirectory().getFlight_Directory()) {
                
            if(b.getName().contains(searchfliTextfield.getText())){
                 Object row[] = new Object[9];
                 row[0]=a;
                 row[1]=b;
                 row[2]=b.getPrice();
                
            row[3] = b;
            row[4]=b.getFromDestination();
            row[5]=b.getToDestination();
             row[6]=b.getSchedule();
           
             row[7]=b.getStartDate();
             row[8]=b.getEndDate();
             
    
            dtm.addRow(row);
            
            }

            }
        
        
    }//GEN-LAST:event_searchfliTextfieldKeyTyped
    */
    }
    private void searchfliTextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfliTextfieldKeyReleased
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)schedule.getModel();
        dtm.setRowCount(0);
       for(Airliner a : airDir.getAirlinerDirectory()) {
           
            
        
            for(Flight b : a.getFlightDirectory().getFlight_Directory()) {
                
            if(b.getName().contains(searchfliTextfield.getText())){
                 Object row[] = new Object[9];
                 row[0]=a;
                 row[1]=b;
                 row[2]=b.getPrice();
                
            row[3] = b;
            row[4]=b.getFromDestination();
            row[5]=b.getToDestination();
             row[6]=b.getSchedule();
           
             row[7]=b.getStartDate();
             row[8]=b.getEndDate();
             
    
            dtm.addRow(row);
            
            }

            }
        
        
    }                
    }//GEN-LAST:event_searchfliTextfieldKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int col=schedule.getSelectedColumn();
        int row=schedule.getSelectedRow();
        if(row<0)
        //that means there is an error and user has not selected any row
        {
            JOptionPane.showMessageDialog(null,"Please make a selection");
            return; }
        
        else{
            
            
            Flight f=(Flight)schedule.getValueAt(row, col);
          SeatPanel manage = new SeatPanel( MasterSchedulePanel,cusDir,f);
            MasterSchedulePanel.add("SeatPanel",manage);
            CardLayout layout = (CardLayout) MasterSchedulePanel.getLayout();
            layout.next( MasterSchedulePanel);
        }
        
        
        
        
        
        
        
        
        
       
                          
    
        
       
        
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable schedule;
    private javax.swing.JTextField searchfliTextfield;
    // End of variables declaration//GEN-END:variables
}
